================
Filters Builders
================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _filters-builders:

Overview 
--------

The :java-core-api:`Filters <com/mongodb/client/model/Filters.html>`
class providesstatic factory methods for all the MongoDB query
operators. Each method returns an instance of the Bson type, which
can in turn be passed to any method that expects a query filter.

.. tip::

   For brevity, you may choose to import the methods of the ``Filters`` class statically:

   .. code-block:: java

      import static com.mongodb.client.model.Filters.*;

   The examples below assume this static import.

Comparison 
----------
Use the ``comparison`` method to match values.

The comparison operator methods include:

- ``eq``: Matches values that are equal to a specified value. 
- ``gt``: Matches values that are greater than a specified value.
- ``gte``: Matches values that are greater than or equal to a specified value.
- ``lt``: Matches values that are less than a specified value.
- ``lte``: Matches values that are less than or equal to a specified value.
- ``ne``: Matches all values that are not equal to a specified value. 
- ``in``: Matches any of the values specified in an array.
- ``nin``: Matches none of the values specified in an array.
- ``empty``: Matches all the documents.

The following example creates a filter that selects all documents where
the value of the :guilabel:`qty` field equals :guilabel:`20`:

.. code-block:: java

   `eq`("qty", 20)
   equal("qty", 20)

which will render as:

.. code-block:: none
   
   { 
    "qty" : 20 
   }

.. note::

   ``eq`` and ``neq`` are reserved words.  ``eq`` is aliased to
   ``equal`` and ``ne`` is aliased to ``notEqual``

The following example creates a filter that selects all documents where
the value of the :guilabel:`qty` field is either :guilabel:`5` or
:guilabel:`15`:

.. code-block:: java

   in("qty", 5, 15)

The following example creates a filter that selects all documents
because the predicate is empty:

.. code-block:: java

   empty()

which will render as:

.. code-block:: none
   
   {}

Logical
-------
Use ``logical`` operators to perform join or invert filters.

The logical operator methods include:

- ``and``: Joins filters with a logical AND and selects all documents that match the conditions of both filters.
- ``or``: Joins filters with a logical OR and selects all documents that match the conditions of either filters.
- ``not``: Inverts the effect of a query expression and selects documents that do not match the filter.
- ``nor``: Joins filters with a logical NOR and selects all documents that fail to match both filters.

The following example creates a filter that selects all documents where
the value of the :guilabel:`qty` field is greater than :guilabel:`20`
and the value of the :guilabel:`user` field equals :guilabel:`"jdoe"`:

.. code-block:: java

   and(gt("qty", 20), equal("user", "jdoe"))

which will render as:

.. code-block:: none
   
   { 
    "qty" : { "$gt" : 20 }, 
    "user" : "jdoe" 
   }

The following example creates a filter that selects all documents where
the :guilabel:`price` field value equals :guilabel:`0.99` or
:guilabel:`1.99`; and the :guilabel:`sale` field value is equal to
:guilabel:`true` or the :guilabel:`qty` field value is less than
:guilabel:`20`:

.. code-block:: java
   
   and(or(equal("price", 0.99), equal("price", 1.99) or(equal("sale", true), lt("qty", 20)))


which will render as:

.. code-block:: none
   
   { 
   "$and" : 
    [
      { "$or" : [ { "price" : 0.99 }, { "price" : 1.99 } ] },
      { "$or" : [ { "sale" : true }, { "qty" : { "$lt" : 20 } } ] }
    ]
   }

Arrays
------
Use ``array`` operators to filter on an array field.

The array operator methods include:

- ``all``: Matches arrays that contain all elements specified in the query.
- ``elemMatch``: Selects documents if element in the array field matches all the specified $elemMatch conditions.
- ``size``: Selects documents if the array field is a specified size.

The following example selects documents with a :guilabel:`tags` array
containing both :guilabel:`"ssl"` and :guilabel:`"security"`:

.. code-block:: java

   all("tags", "ssl", "security")

Elements
~~~~~~~~


Evaluation
~~~~~~~~~~


Bitwise
~~~~~~~


Geospatial
~~~~~~~~~~

